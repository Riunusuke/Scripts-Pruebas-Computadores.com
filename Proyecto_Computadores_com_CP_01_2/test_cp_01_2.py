from selenium.webdriver.common.by import By
from src.testproject.classes import DriverStepSettings, StepSettings
from src.testproject.decorator import report_assertion_errors
from src.testproject.enums import SleepTimingType
from src.testproject.sdk.drivers import webdriver
import pytest


"""
This pytest test was automatically generated by TestProject
    Project: Proyecto Computadores.com
    Package: TestProject.Generated.Tests.ProyectoComputadorescom
    Test: CP-01.2
    Generated by: Andres Diaz (diazandresfelipe91@gmail.com)
    Generated on 09/20/2022, 19:51:34
"""


@pytest.fixture()
def driver():
    driver = webdriver.Chrome(token="6vg3AYBdNyUgmB8Dn2JI8usHfm5RJkaE6bkMe7kVMXI",
                              project_name="Proyecto Computadores.com",
                              job_name="CP-01.2")
    step_settings = StepSettings(timeout=15000,
                                 sleep_time=500,
                                 sleep_timing_type=SleepTimingType.Before)
    with DriverStepSettings(driver, step_settings):
        yield driver
    driver.quit()


@report_assertion_errors
def test_main(driver):
    """Se busca comprobar que el usuario no sea capaz de registrarse correctamente si la contrase√±a ingresada no cumple los requisitos."""
    # Test Parameters
    # Auto generated application URL parameter
    ApplicationURL = "http://localhost/wordpress/"
    NombreUser = ""
    Nombre = ""
    Apellido = ""
    Correo = ""
    Password = ""

    # 1. Navigate to '{ApplicationURL}'
    # Navigates the specified URL (Auto-generated)
    driver.get(f'{ApplicationURL}')

    # 2. Click 'Cuenta'
    cuenta = driver.find_element(By.XPATH,
                                 "//li[3]/a[. = 'Cuenta']")
    cuenta.click()

    # 3. Click 'Registro'
    registro = driver.find_element(By.XPATH,
                                   "//a[. = '\n\t\t\t\t\tRegistro\t\t\t\t']")
    registro.click()

    # 4. Type '{NombreUser}' in 'user_login-12'
    user_login_12 = driver.find_element(By.CSS_SELECTOR,
                                        "#user_login-12")
    user_login_12.send_keys(f'{NombreUser}')

    # 5. Type '{Nombre}' in 'first_name-12'
    first_name_12 = driver.find_element(By.CSS_SELECTOR,
                                        "#first_name-12")
    first_name_12.send_keys(f'{Nombre}')

    # 6. Type '{Apellido}' in 'last_name-12'
    last_name_12 = driver.find_element(By.CSS_SELECTOR,
                                       "#last_name-12")
    last_name_12.send_keys(f'{Apellido}')

    # 7. Type '{Correo}' in 'user_email-12'
    user_email_12 = driver.find_element(By.CSS_SELECTOR,
                                        "#user_email-12")
    user_email_12.send_keys(f'{Correo}')

    # 8. Type '{Password}' in 'user_password-12'
    user_password_12 = driver.find_element(By.CSS_SELECTOR,
                                           "#user_password-12")
    user_password_12.send_keys(f'{Password}')

    # 9. Type '{Password}' in 'confirm_user_password-12'
    confirm_user_password_12 = driver.find_element(By.CSS_SELECTOR,
                                                   "#confirm_user_password-12")
    confirm_user_password_12.send_keys(f'{Password}')

    # 10. Click 'um-submit-btn1'
    um_submit_btn1 = driver.find_element(By.CSS_SELECTOR,
                                         "#um-submit-btn")
    um_submit_btn1.click()

    # 11. Scroll window by ('0','250')
    driver.execute_script("window.scrollBy(0,250)")

    # 12. Click 'Tu Password debe contener, al menos, ...'
    tu_password_debe_contener_al_menos_ = driver.find_element(By.XPATH,
                                                              "//div[. = 'Tu Password debe contener, al menos, 8 caracteres']")
    tu_password_debe_contener_al_menos_.click()
